service: ${env:SERVICE}

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${env:STAGE}
  region: ${env:REGION}
#  apiKeys:
#    - ${env:STAGE}-${env:SERVICE}Key
  usagePlan:
    quota:
      limit: ${env:QUOTA_LIMIT}
      offset: ${env:QUOTA_OFFSET}
      period: ${env:QUOTA_PERIOD}
    throttle:
      burstLimit: ${env:THROTTLE_BURST_LIMIT}
      rateLimit: ${env:THROTTLE_RATE_LIMIT}
  iamRoleStatements:
    - Effect: Allow
      Action: dynamodb:scan
      Resource: arn:aws:dynamodb:${env:REGION}:#{AWS::AccountId}:table/${env:EXPENSES_CATEGORIES_TABLE}

plugins:
  - serverless-pseudo-parameters
  - serverless-dotenv-plugin

functions:
  get-expenses:
    handler: src/handlers/get-expenses.handler
    description: Financial Control API - Get All Expenses
    events:
      - http:
         path: expenses
         method: get

  get-categories:
    handler: src/handlers/get-categories.handler
    description: Financial Control API - Get All Categories
    events:
      - http:
         path: categories
         method: get

resources:
  Resources:
    expensesCategoriesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:EXPENSES_CATEGORIES_TABLE}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
